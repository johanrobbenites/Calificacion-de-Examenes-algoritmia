#include <iostream>
#include <fstream>
#include <string.h>
#include <stdlib.h>
using namespace std;
typedef char Cadena[10];
struct NodoZ{
	int nota;
	NodoZ *puntZ;
};
struct NodoX{
	char curso;
	NodoZ *puntZ;
	NodoX *puntX;
};
void Crea_NodoZ(NodoZ *&p, int nota){
	if(p==NULL){
		p=new(NodoZ);
		p->nota=nota;
		p->puntZ=NULL;
	}
	else{
		Crea_NodoZ(p->puntZ, nota);
	}
}
void Crea_NodoX(NodoX *&p, char curso, int nota){
	if(p==NULL){
		p=new(NodoX);
		p->curso=curso;
		p->puntX=NULL;
		p->puntZ=NULL;
		Crea_NodoZ(p->puntZ, nota);
	}
	else{
		if(p->curso==curso){
			Crea_NodoZ(p->puntZ, nota);
		}
		else{
			Crea_NodoX(p->puntX, curso, nota);
		}
	}
}
//Recorre NodoZ
void RecorreZ(NodoZ *p){
	if(p!=NULL){
		cout<<p->nota<<endl;
		RecorreZ(p->puntZ);
	}
}
//Recorre NodoX
void RecorreX(NodoX *p){
	if(p!=NULL){
		cout<<p->curso<<endl;
		RecorreZ(p->puntZ);
		RecorreX(p->puntX);
	}
}
NodoX *Lista;

int main() {
	ifstream ent;
	int i,j,n,aux;
	char curso;
	Cadena s1;
	Lista=NULL;
	ent.open("NOTONES.TXT");
	if(!ent){
		cout<<"Error de apertura del archivo...";
	}
	else{
		
		while(!ent.eof()){
			if(ent>>s1){
				curso=s1[0];
				i=0;
				n=strlen(s1);
				while(i<n){
				if(((s1[i])!='0') and ((s1[i])!='1') and ((s1[i])!='2') and ((s1[i])!='3') and ((s1[i])!='4') and ((s1[i])!='5') and ((s1[i])!='6') and ((s1[i])!='7') and ((s1[i])!='8') and ((s1[i])!='9')){
				j=i;
				aux++;
			while(j<n){
				s1[j]=s1[j+1];
				j++;
			}
			n--;
		}
		else{
			i++;
		}
	}
				int nota=atoi(s1);
				Crea_NodoX(Lista, curso, nota);
			}
		}
		ent.close();
	}
	//Recorriendo la Lista
	RecorreX(Lista);
	
	return 0;
}
